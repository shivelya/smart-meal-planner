name: Main Backend CI/CD
  
on:
  push:
    paths:
      - 'backend/**'
      - '.github/workflows/main-backend-ci-cd.yml'
    branches:
      - main
  pull_request:
    paths:
      - 'backend/**'
      - '.github/workflows/main-backend-ci-cd.yml'
    branches:
      - main
  workflow_dispatch:

jobs:
  build:
    runs-on: windows-latest
    permissions:
      contents: read #This is required for actions/checkout

    steps:
      - uses: actions/checkout@v4

      - name: Set up .NET Core
        uses: actions/setup-dotnet@v4
        with:
          dotnet-version: '8.x'

      - name: Build with dotnet
        run: dotnet build backend/Backend --configuration Release

      - name: Upload artifact for deployment job
        uses: actions/upload-artifact@v4
        with:
          name: .net-app
          path: .

  test:
    runs-on: windows-latest
    needs: build
    permissions:
      contents: read #This is required for actions/checkout

    steps:
      - uses: actions/checkout@v4

      - name: Set up .NET Core
        uses: actions/setup-dotnet@v4
        with:
          dotnet-version: '8.x'

      - name: Restore dependencies
        run: dotnet restore backend/Backend.Tests

      - name: Install report generator
        run: dotnet tool install --global dotnet-reportgenerator-globaltool --version 5.1.21

      - name: Build the test project
        run: dotnet build backend/Backend.Tests --configuration Release --no-restore

      - name: Run unit tests with coverage
        run: dotnet test backend/Backend.Tests --configuration Release /p:CollectCoverage=true /p:CoverletOutputFormat=cobertura /p:CoverletOutput=../TestResults/coverage.cobertura.xml

      - name: Generate code coverage report
        run: reportgenerator \
          -reports:./backend/TestResults/coverage.cobertura.xml \
          -targetdir:"coveragereport" \
          -reporttypes:Html

      - name: Upload code coverage report
        uses: actions/upload-artifact@v4
        with:
          name: code-coverage-report-deploy
          path: coveragereport

  deploy:
    runs-on: windows-latest
    needs: [build, test]
    permissions:
      id-token: write #This is required for requesting the JWT
      contents: read #This is required for actions/checkout

    steps:
      - name: Install PostgreSQL tools
        run: |
          choco install postgresql --no-progress --yes
          refreshenv
          pg_dump --version
        shell: pwsh

      # ✅ Backup DB
      - name: Backup PostgreSQL database
        run: |
          $env:PGPASSWORD="${{ secrets.AZURE_DB_PASSWORD }}"
          pg_dump `
            --host="${{ secrets.AZURE_DB_HOST }}" `
            --username="${{ secrets.AZURE_DB_USER }}" `
            --dbname="${{ secrets.AZURE_DB_NAME }}" `
            --format=custom `
            --file="backup_$(Get-Date -Format yyyyMMddHHmm).dump"
          shell: pwsh

      - name: Upload backup to Azure Blob
        uses: azure/CLI@v2
        with:
          inlineScript: |
              az storage blob upload `
                --account-name "${{ secrets.STORAGE_ACCOUNT }}" `
                --container-name db-backups `
                --name backup_$(Get-Date -Format yyyyMMddHHmm).dump `
                --file backup_$(Get-Date -Format yyyyMMddHHmm).dump `
                --auth-mode key `
                --account-key "${{ secrets.STORAGE_KEY }}"

      # ✅ Apply migrations
      - name: Apply EF Core migrations
        run: dotnet ef database update --project backend/Backend.csproj `
          --connection "Host=${{ secrets.AZURE_DB_HOST }};Database=${{ secrets.AZURE_DB_NAME }};Username=${{ secrets.AZURE_DB_USER }};Password=${{ secrets.AZURE_DB_PASSWORD }};Ssl Mode=Require;Trust Server Certificate=true"

      - name: Download artifact from build job
        uses: actions/download-artifact@v4
        with:
          name: .net-app

      - name: dotnet publish
        run: dotnet publish backend/Backend -c Release -o publish
      
      - name: Login to Azure
        uses: azure/login@v2
        with:
          client-id: ${{ secrets.AZUREAPPSERVICE_CLIENTID_7A381B7694AE46BAA4F949F9CEE439E8 }}
          tenant-id: ${{ secrets.AZUREAPPSERVICE_TENANTID_167812655C614B57BE44E4AECBADFD1F }}
          subscription-id: ${{ secrets.AZUREAPPSERVICE_SUBSCRIPTIONID_BB25C7AB8A5B443CADF01DB91FD1330E }}

      - name: Deploy to Azure Web App
        id: deploy-to-webapp
        uses: azure/webapps-deploy@v3
        with:
          app-name: 'smart-meal-planner-backend'
          slot-name: 'Production'
          package: ./publish