name: Build and Deploy Docs

on:
  workflow_run:
    workflows: ["Main Backend CD", "Main Frontend CD"]
    types:
      - completed
  workflow_dispatch:
permissions:
      contents: read
      pages: write
      id-token: write
# Allow only one concurrent deployment, skipping runs queued between the run in-progress and latest queued.
# However, do NOT cancel in-progress runs as we want to allow these production deployments to complete.
concurrency:
  group: "pages"
  cancel-in-progress: false
jobs:
  build_and_deploy_docs:
    environment:
      name: github-pages
      url: ${{ steps.deployment.outputs.page_url }}
    runs-on: ubuntu-latest
    name: Build and Deploy Docs
  
    steps:
      - uses: actions/checkout@v3
        with:
          submodules: true
          lfs: false

      - name: Setup Node.js
        uses: actions/setup-node@v3
        with:
          node-version: '20' # Specify the Node.js version to use

      - name: Install Frontend Dependencies
        working-directory: ./frontend
        run: npm install

      - name: Generate Frontend Documentation
        working-directory: ./frontend
        run: npx compodoc -p tsconfig.json -d _compodoc

      - name: Download Code Coverage Report
        uses: actions/download-artifact@v4
        with:
          name: code-coverage-report
          path: coveragereport
          github-token: ${{ secrets.GITHUB_TOKEN }}
          run-id: ${{ github.event.workflow_run.id }}

      - name: Merge Docs
        run: |
          rm -rf docs
          mkdir -p docs/frontend
          mkdir -p docs/coveragereport
          cp -r ./frontend/_compodoc/* docs/frontend/
          cp -r ./coveragereport/* docs/coveragereport/

      - name: Setup Pages
        uses: actions/configure-pages@v5

      - name: Upload artifact
        uses: actions/upload-pages-artifact@v3
        with:
          path: 'docs'

      - name: Deploy to GitHub Pages
        id: deployment
        uses: actions/deploy-pages@v4

      # - name: Deploy
      #   id: deploy
      #   uses: Azure/static-web-apps-deploy@v1
      #   with:
      #     azure_static_web_apps_api_token: ${{ secrets.AZURE_STATIC_WEB_APPS_API_TOKEN_SALMON_POND_0787B270F }}
      #     repo_token: ${{ secrets.GITHUB_TOKEN }} # Used for Github integrations (i.e. PR comments)
      #     action: "upload"
      #     skip_app_build: true
      #     ###### Repository/Build Configurations - These values can be configured to match your app requirements. ######
      #     # For more information regarding Static Web App workflow configurations, please visit: https://aka.ms/swaworkflowconfig
      #     app_location: "docs" # App source code path
      #     api_location: "" # Api source code path - optional
      #     output_location: "" # Built app content directory - optional
      #     ###### End of Repository/Build Configurations ######